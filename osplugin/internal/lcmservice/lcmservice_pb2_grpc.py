# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from internal.lcmservice import lcmservice_pb2 as internal_dot_lcmservice_dot_lcmservice__pb2


class AppLCMStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.instantiate = channel.stream_unary(
                '/lcmservice.AppLCM/instantiate',
                request_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.InstantiateRequest.SerializeToString,
                response_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.InstantiateResponse.FromString,
                )
        self.terminate = channel.unary_unary(
                '/lcmservice.AppLCM/terminate',
                request_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.TerminateRequest.SerializeToString,
                response_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.TerminateResponse.FromString,
                )
        self.query = channel.unary_unary(
                '/lcmservice.AppLCM/query',
                request_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.QueryRequest.SerializeToString,
                response_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.QueryResponse.FromString,
                )
        self.uploadConfig = channel.stream_unary(
                '/lcmservice.AppLCM/uploadConfig',
                request_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.UploadCfgRequest.SerializeToString,
                response_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.UploadCfgResponse.FromString,
                )
        self.removeConfig = channel.unary_unary(
                '/lcmservice.AppLCM/removeConfig',
                request_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.RemoveCfgRequest.SerializeToString,
                response_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.RemoveCfgResponse.FromString,
                )
        self.podDescribe = channel.unary_unary(
                '/lcmservice.AppLCM/podDescribe',
                request_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.PodDescribeRequest.SerializeToString,
                response_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.PodDescribeResponse.FromString,
                )
        self.workloadDescribe = channel.unary_unary(
                '/lcmservice.AppLCM/workloadDescribe',
                request_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.WorkloadDescribeRequest.SerializeToString,
                response_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.WorkloadDescribeResponse.FromString,
                )


class AppLCMServicer(object):
    """Missing associated documentation comment in .proto file."""

    def instantiate(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def terminate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def query(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def uploadConfig(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def podDescribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def workloadDescribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AppLCMServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'instantiate': grpc.stream_unary_rpc_method_handler(
                    servicer.instantiate,
                    request_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.InstantiateRequest.FromString,
                    response_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.InstantiateResponse.SerializeToString,
            ),
            'terminate': grpc.unary_unary_rpc_method_handler(
                    servicer.terminate,
                    request_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.TerminateRequest.FromString,
                    response_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.TerminateResponse.SerializeToString,
            ),
            'query': grpc.unary_unary_rpc_method_handler(
                    servicer.query,
                    request_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.QueryRequest.FromString,
                    response_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.QueryResponse.SerializeToString,
            ),
            'uploadConfig': grpc.stream_unary_rpc_method_handler(
                    servicer.uploadConfig,
                    request_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.UploadCfgRequest.FromString,
                    response_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.UploadCfgResponse.SerializeToString,
            ),
            'removeConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.removeConfig,
                    request_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.RemoveCfgRequest.FromString,
                    response_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.RemoveCfgResponse.SerializeToString,
            ),
            'podDescribe': grpc.unary_unary_rpc_method_handler(
                    servicer.podDescribe,
                    request_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.PodDescribeRequest.FromString,
                    response_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.PodDescribeResponse.SerializeToString,
            ),
            'workloadDescribe': grpc.unary_unary_rpc_method_handler(
                    servicer.workloadDescribe,
                    request_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.WorkloadDescribeRequest.FromString,
                    response_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.WorkloadDescribeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lcmservice.AppLCM', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AppLCM(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def instantiate(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/lcmservice.AppLCM/instantiate',
            internal_dot_lcmservice_dot_lcmservice__pb2.InstantiateRequest.SerializeToString,
            internal_dot_lcmservice_dot_lcmservice__pb2.InstantiateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def terminate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lcmservice.AppLCM/terminate',
            internal_dot_lcmservice_dot_lcmservice__pb2.TerminateRequest.SerializeToString,
            internal_dot_lcmservice_dot_lcmservice__pb2.TerminateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def query(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lcmservice.AppLCM/query',
            internal_dot_lcmservice_dot_lcmservice__pb2.QueryRequest.SerializeToString,
            internal_dot_lcmservice_dot_lcmservice__pb2.QueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def uploadConfig(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/lcmservice.AppLCM/uploadConfig',
            internal_dot_lcmservice_dot_lcmservice__pb2.UploadCfgRequest.SerializeToString,
            internal_dot_lcmservice_dot_lcmservice__pb2.UploadCfgResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def removeConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lcmservice.AppLCM/removeConfig',
            internal_dot_lcmservice_dot_lcmservice__pb2.RemoveCfgRequest.SerializeToString,
            internal_dot_lcmservice_dot_lcmservice__pb2.RemoveCfgResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def podDescribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lcmservice.AppLCM/podDescribe',
            internal_dot_lcmservice_dot_lcmservice__pb2.PodDescribeRequest.SerializeToString,
            internal_dot_lcmservice_dot_lcmservice__pb2.PodDescribeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def workloadDescribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lcmservice.AppLCM/workloadDescribe',
            internal_dot_lcmservice_dot_lcmservice__pb2.WorkloadDescribeRequest.SerializeToString,
            internal_dot_lcmservice_dot_lcmservice__pb2.WorkloadDescribeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class VmImageStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createVmImage = channel.unary_unary(
                '/lcmservice.VmImage/createVmImage',
                request_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.CreateVmImageRequest.SerializeToString,
                response_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.CreateVmImageResponse.FromString,
                )
        self.queryVmImage = channel.unary_unary(
                '/lcmservice.VmImage/queryVmImage',
                request_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.QueryVmImageRequest.SerializeToString,
                response_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.QueryVmImageResponse.FromString,
                )
        self.deleteVmImage = channel.unary_unary(
                '/lcmservice.VmImage/deleteVmImage',
                request_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.DeleteVmImageRequest.SerializeToString,
                response_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.DeleteVmImageResponse.FromString,
                )
        self.downloadVmImage = channel.unary_stream(
                '/lcmservice.VmImage/downloadVmImage',
                request_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.DownloadVmImageRequest.SerializeToString,
                response_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.DownloadVmImageResponse.FromString,
                )


class VmImageServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createVmImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def queryVmImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteVmImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def downloadVmImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VmImageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createVmImage': grpc.unary_unary_rpc_method_handler(
                    servicer.createVmImage,
                    request_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.CreateVmImageRequest.FromString,
                    response_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.CreateVmImageResponse.SerializeToString,
            ),
            'queryVmImage': grpc.unary_unary_rpc_method_handler(
                    servicer.queryVmImage,
                    request_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.QueryVmImageRequest.FromString,
                    response_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.QueryVmImageResponse.SerializeToString,
            ),
            'deleteVmImage': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteVmImage,
                    request_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.DeleteVmImageRequest.FromString,
                    response_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.DeleteVmImageResponse.SerializeToString,
            ),
            'downloadVmImage': grpc.unary_stream_rpc_method_handler(
                    servicer.downloadVmImage,
                    request_deserializer=internal_dot_lcmservice_dot_lcmservice__pb2.DownloadVmImageRequest.FromString,
                    response_serializer=internal_dot_lcmservice_dot_lcmservice__pb2.DownloadVmImageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lcmservice.VmImage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VmImage(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createVmImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lcmservice.VmImage/createVmImage',
            internal_dot_lcmservice_dot_lcmservice__pb2.CreateVmImageRequest.SerializeToString,
            internal_dot_lcmservice_dot_lcmservice__pb2.CreateVmImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def queryVmImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lcmservice.VmImage/queryVmImage',
            internal_dot_lcmservice_dot_lcmservice__pb2.QueryVmImageRequest.SerializeToString,
            internal_dot_lcmservice_dot_lcmservice__pb2.QueryVmImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteVmImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lcmservice.VmImage/deleteVmImage',
            internal_dot_lcmservice_dot_lcmservice__pb2.DeleteVmImageRequest.SerializeToString,
            internal_dot_lcmservice_dot_lcmservice__pb2.DeleteVmImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def downloadVmImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/lcmservice.VmImage/downloadVmImage',
            internal_dot_lcmservice_dot_lcmservice__pb2.DownloadVmImageRequest.SerializeToString,
            internal_dot_lcmservice_dot_lcmservice__pb2.DownloadVmImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
