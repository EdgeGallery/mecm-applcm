description: Generated By OsPlugin
heat_template_version: '2017-09-01'
outputs:
  EMS_VDU1:
    value:
      networks:
        get_attr:
        - EMS_VDU1
        - addresses
      vmId:
        get_resource: EMS_VDU1
      vncUrl:
        get_attr:
        - EMS_VDU1
        - console_urls
        - novnc
parameters:
  private_network_name:
    description: 'aaa'
    type: string
    default: mynet
  DC_ID:
    description: DC_ID
    type: string
  DnsRuleDomainName:
    default: mec.edgegallery.com
    description: DnsRuleDomainName
    type: string
  DnsRuleIpAddress:
    default: 127.0.0.1
    description: DnsRuleIpAddress
    type: string
  DnsRuleIpAddressType:
    default: IP_V4
    description: DnsRuleIpAddressType
    type: string
  TrafficRuleDstAddr:
    default: 127.0.0.1/28
    description: TrafficRuleDstAddr
    type: string
  TrafficRuleDstPort:
    default: 0-65535
    description: TrafficRuleDstPort
    type: string
  TrafficRuleProtocol:
    default: ANY
    description: TrafficRuleProtocol
    type: string
  TrafficRuleSrcAddr:
    default: 0.0.0.0/0
    description: TrafficRuleSrcAddr
    type: string
  TrafficRuleSrcPort:
    default: 0-65535
    description: TrafficRuleSrcPort
    type: string
  ak:
    default: abdc
    description: AK
    type: string
  app_internet_gw:
    default: null
    description: app_internet_gw
    type: string
  app_internet_ip:
    default: null
    description: app_internet_ip
    type: string
  app_internet_mask:
    default: null
    description: app_internet_mask
    type: string
  app_mp1_gw:
    default: null
    description: app_mp1_gw
    type: string
  app_mp1_ip:
    default: null
    description: app_mp1_ip
    type: string
  app_mp1_mask:
    default: null
    description: app_mp1_mask
    type: string
  app_n6_gw:
    default: null
    description: app_n6_gw
    type: string
  app_n6_ip:
    default: null
    description: app_n6_ip
    type: string
  app_n6_mask:
    default: null
    description: app_n6_mask
    type: string
  az_dc:
    default: nova
    description: AZ.DZ
    type: string
  mec_internet_ip:
    default: null
    description: mec_internet_ip
    type: string
  mep_certificate:
    default: YHXGFTWU!@$%@&%#(DH(122479+_)
    description: MEP Certificate
    type: string
  mep_ip:
    default: null
    description: mep_ip
    type: string
  mep_port:
    default: null
    description: mep_port
    type: string
  network_internet_physnet:
    default: network_internet_physnet
    description: network_internet_physnet
    type: string
  network_internet_vlanid:
    default: network_internet_vlanid
    description: network_internet_vlanid
    type: string
  network_mep_physnet:
    default: network_mep_physnet
    description: network_mep_physnet
    type: string
  network_mep_vlanid:
    default: network_mep_vlanid
    description: network_mep_vlanid
    type: string
  network_n6_physnet:
    default: network_n6_physnet
    description: network_n6_physnet
    type: string
  network_n6_vlanid:
    default: network_n6_vlanid
    description: network_n6_vlanid
    type: string
  network_name_internet:
    default: mec_newwork_internet
    description: network_name_internet
    type: string
  network_name_mep:
    default: mec_network_mep
    description: network_name_mep
    type: string
  network_name_n6:
    default: mec_newwork_n6
    description: network_name_n6
    type: string
  sk:
    default: 1234
    description: SK
    type: string
  ue_ip_segment:
    default: 0.0.0.0/0
    description: ue_ip_segment
    type: string
resources:
  DefaultSecurityGroup:
    type: OS::Neutron::SecurityGroup
  DefaultSecurityGroupDefaultIcmpRule:
    properties:
      protocol: icmp
      remote_group:
        get_resource: DefaultSecurityGroup
      security_group:
        get_resource: DefaultSecurityGroup
    type: OS::Neutron::SecurityGroupRule
  DefaultSecurityGroupDefaultTcpRule:
    properties:
      protocol: tcp
      remote_group:
        get_resource: DefaultSecurityGroup
      security_group:
        get_resource: DefaultSecurityGroup
    type: OS::Neutron::SecurityGroupRule
  DefaultSecurityGroupDefaultUdpRule:
    properties:
      protocol: udp
      remote_group:
        get_resource: DefaultSecurityGroup
      security_group:
        get_resource: DefaultSecurityGroup
    type: OS::Neutron::SecurityGroupRule
  EMS_VDU1:
    properties:
      availability_zone:
        get_param: az_dc
      config_drive: true
      flavor:
        get_resource: EMS_VDU1_FLAVOR
      image: abc123123
      name: eulerforTR6_iso_arm_EMS_VDU1
      networks:
      - port:
          get_resource: EMS_VDU1_CP0
      - port:
          get_resource: EMS_VDU1_CP1
      - port:
          get_resource: EMS_VDU1_CP2
      user_data:
        str_replace:
          params:
            $APP_INTERNET_GW$:
              get_param: APP_Plane01_GW
            $APP_INTERNET_IP$:
              get_input:APP_Plane01_IP: null
            $APP_INTERNET_MASK$:
              get_param: APP_Plane01_MASK
            $APP_MP1_GW$:
              get_param: APP_Plane03_GW
            $APP_MP1_IP$:
              get_param: APP_Plane03_IP
            $APP_MP1_MASK$:
              get_param: APP_Plane03_MASK
            $APP_N6_GW$:
              get_param: APP_Plane02_GW
            $APP_N6_IP$:
              get_param: APP_Plane02_IP
            $APP_N6_MASK$:
              get_param: APP_Plane02_MASK
            $MEP_IP$:
              get_param: mep_ip
            $MEP_PORT$:
              get_param: mep_port
            $UE_IP_SEGMENT$:
              get_param: ue_ip_segment
            $ak$:
              get_param: ak
            $certificate_info$:
              get_param: mep_certificate
            $sk$:
              get_param: sk
          template: '#!/bin/bash

            rm -rf /home/mep.ca

            rm -rf /home/init.txt

            echo "$certificate_info$" >> /home/mep.ca

            echo "app_instance_id_key=($$APP_INSTANCE_ID)" >> /home/init.txt

            echo "mep_ip=$MEP_IP$" >> /home/init.txt

            echo "mep_port=$MEP_PORT$" >> /home/init.txt

            function prefix(()) {

            declare -A dic

            dic=(([255]=8 [254]=7 [252]=6 [248]=5 [240]=4 [224]=3 [192]=2 [128]=1
            [0]=0))

            count=0

            a=$((echo "$1" | awk -F "." ''{print "$1" "$2" "$3" "$4"}''))

            from num in $a;do

            (((count=$count+${dic[$num]})))

            done

            return $count

            }

            rm -f /etc/netplan/*.yaml

            echo "network:" >> /etc/netplan/50-cloud-init.yaml

            echo "    version: 2" >> /etc/netplan/50-cloud-init.yaml

            echo "    ethernets:" >> /etc/netplan/50-cloud-init.yaml

            ip a | grep ''^2:'' | awk ''{print "       "$2}'' >> /etc/netplan/50-cloud-init.yaml

            prefix $APP_INTERNET_MASK$

            echo "            addresses: [$APP_INTERNET_IP/$?]" >> /etc/netplan/50-cloud-init.yaml

            echo "            routes:" >> /etc/netplan/50-cloud-init.yaml

            echo "                    - to: 0.0.0.0/0" >> /etc/netplan/50-cloud-init.yaml

            echo "                      via: $APP_INTERNET_GW$" >> /etc/netplan/50-cloud-init.yaml

            echo "                      metric: 30" >> /etc/netplan/50-cloud-init.yaml

            echo "            mtu: 1500" >> /etc/netplan/50-cloud-init.yaml

            ip a | grep ''^3:'' | awk ''{print "       "$2}'' >> /etc/netplan/50-cloud-init.yaml

            prefix $APP_N6_MASK$

            echo "            addresses: [$APP_N6_IP/$?]" >> /etc/netplan/50-cloud-init.yaml

            echo "            routes:" >> /etc/netplan/50-cloud-init.yaml

            echo "                    - to: $UE_IP_SEGMENT$" >> /etc/netplan/50-cloud-init.yaml

            echo "                      via: $APP_N6_GW$" >> /etc/netplan/50-cloud-init.yaml

            echo "                      metric: 50" >> /etc/netplan/50-cloud-init.yaml

            echo "            mtu: 1500" >> /etc/netplan/50-cloud-init.yaml

            ip a | grep ''^4:'' | awk ''{print "       "$2}'' >> /etc/netplan/50-cloud-init.yaml

            prefix $APP_MP1_MASK$

            echo "            addresses: [$APP_MP1_IP/$?]" >> /etc/netplan/50-cloud-init.yaml

            echo "            routes:" >> /etc/netplan/50-cloud-init.yaml

            echo "                    - to: $MEP_IP$/32" >> /etc/netplan/50-cloud-init.yaml

            echo "                      via: $APP_MP1_GW$" >> /etc/netplan/50-cloud-init.yaml

            echo "                      metric: 100" >> /etc/netplan/50-cloud-init.yaml

            echo "            mtu: 1500" >> /etc/netplan/50-cloud-init.yaml

            netplan apply


            echo ''ak=$ak$\nsk=$sk$\n'' >> /root/init.txt

            '
      user_data_format: RAW
    type: OS::Nova::Server
  EMS_VDU1_CP0:
    properties:
      binding:vnic_type: normal
      fixed_ips:
      - ip_address:
          get_param: app_mp1_ip
      network:
        get_param: network_name_mep
      port_security_enabled: true
      security_groups:
      - get_resource: DefaultSecurityGroup
    type: OS::Neutron::Port
  EMS_VDU1_CP1:
    properties:
      binding:vnic_type: normal
      fixed_ips:
      - ip_address:
          get_param: app_internet_ip
      network:
        get_param: network_name_internet
      port_security_enabled: true
      security_groups:
      - get_resource: DefaultSecurityGroup
    type: OS::Neutron::Port
  EMS_VDU1_CP2:
    properties:
      binding:vnic_type: normal
      fixed_ips:
      - ip_address:
          get_param: app_n6_ip
      network:
        get_param: network_name_n6
      port_security_enabled: true
      security_groups:
      - get_resource: DefaultSecurityGroup
    type: OS::Neutron::Port
  EMS_VDU1_FLAVOR:
    properties:
      disk: 40
      extra_specs:
        mgmt_egx86: 'true'
      ram: 1024
      vcpus: 1
    type: OS::Nova::Flavor
  mp1_rule_icmp:
    properties:
      protocol: icmp
      remote_ip_prefix:
        list_join:
        - ''
        - - get_param: mep_ip
          - /32
      security_group:
        get_resource: DefaultSecurityGroup
    type: OS::Neutron::SecurityGroupRule
  mp1_rule_tcp:
    properties:
      protocol: tcp
      remote_ip_prefix:
        list_join:
        - ''
        - - get_param: mep_ip
          - /32
      security_group:
        get_resource: DefaultSecurityGroup
    type: OS::Neutron::SecurityGroupRule
  mp1_rule_udp:
    properties:
      protocol: udp
      remote_ip_prefix:
        list_join:
        - ''
        - - get_param: mep_ip
          - /32
      security_group:
        get_resource: DefaultSecurityGroup
    type: OS::Neutron::SecurityGroupRule
  n6_rule_icmp:
    properties:
      protocol: icmp
      remote_ip_prefix:
        get_param: ue_ip_segment
      security_group:
        get_resource: DefaultSecurityGroup
    type: OS::Neutron::SecurityGroupRule
  n6_rule_tcp:
    properties:
      protocol: tcp
      remote_ip_prefix:
        get_param: ue_ip_segment
      security_group:
        get_resource: DefaultSecurityGroup
    type: OS::Neutron::SecurityGroupRule
  n6_rule_udp:
    properties:
      protocol: udp
      remote_ip_prefix:
        get_param: ue_ip_segment
      security_group:
        get_resource: DefaultSecurityGroup
    type: OS::Neutron::SecurityGroupRule
