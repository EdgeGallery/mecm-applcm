// Copyright 2020 Huawei Technologies Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: lcmservice.proto

package internal_lcmservice

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type InstantiateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken   string            `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	TenantId      string            `protobuf:"bytes,2,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	AppInstanceId string            `protobuf:"bytes,3,opt,name=appInstanceId,proto3" json:"appInstanceId,omitempty"`
	AppPackageId  string            `protobuf:"bytes,4,opt,name=appPackageId,proto3" json:"appPackageId,omitempty"`
	HostIp        string            `protobuf:"bytes,5,opt,name=hostIp,proto3" json:"hostIp,omitempty"`
	Parameters    map[string]string `protobuf:"bytes,6,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AkSkLcmGen    bool              `protobuf:"varint,7,opt,name=akSkLcmGen,proto3" json:"akSkLcmGen,omitempty"`
}

func (x *InstantiateRequest) Reset() {
	*x = InstantiateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstantiateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantiateRequest) ProtoMessage() {}

func (x *InstantiateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstantiateRequest.ProtoReflect.Descriptor instead.
func (*InstantiateRequest) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{0}
}

func (x *InstantiateRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *InstantiateRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *InstantiateRequest) GetAppInstanceId() string {
	if x != nil {
		return x.AppInstanceId
	}
	return ""
}

func (x *InstantiateRequest) GetAppPackageId() string {
	if x != nil {
		return x.AppPackageId
	}
	return ""
}

func (x *InstantiateRequest) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *InstantiateRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *InstantiateRequest) GetAkSkLcmGen() bool {
	if x != nil {
		return x.AkSkLcmGen
	}
	return false
}

type InstantiateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *InstantiateResponse) Reset() {
	*x = InstantiateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstantiateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstantiateResponse) ProtoMessage() {}

func (x *InstantiateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstantiateResponse.ProtoReflect.Descriptor instead.
func (*InstantiateResponse) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{1}
}

func (x *InstantiateResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type TerminateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken   string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	TenantId      string `protobuf:"bytes,2,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	AppInstanceId string `protobuf:"bytes,3,opt,name=appInstanceId,proto3" json:"appInstanceId,omitempty"`
	HostIp        string `protobuf:"bytes,4,opt,name=hostIp,proto3" json:"hostIp,omitempty"`
}

func (x *TerminateRequest) Reset() {
	*x = TerminateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateRequest) ProtoMessage() {}

func (x *TerminateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateRequest.ProtoReflect.Descriptor instead.
func (*TerminateRequest) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{2}
}

func (x *TerminateRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *TerminateRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *TerminateRequest) GetAppInstanceId() string {
	if x != nil {
		return x.AppInstanceId
	}
	return ""
}

func (x *TerminateRequest) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

type TerminateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *TerminateResponse) Reset() {
	*x = TerminateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateResponse) ProtoMessage() {}

func (x *TerminateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateResponse.ProtoReflect.Descriptor instead.
func (*TerminateResponse) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{3}
}

func (x *TerminateResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken   string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	AppInstanceId string `protobuf:"bytes,2,opt,name=appInstanceId,proto3" json:"appInstanceId,omitempty"`
	HostIp        string `protobuf:"bytes,3,opt,name=hostIp,proto3" json:"hostIp,omitempty"`
	TenantId      string `protobuf:"bytes,4,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{4}
}

func (x *QueryRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *QueryRequest) GetAppInstanceId() string {
	if x != nil {
		return x.AppInstanceId
	}
	return ""
}

func (x *QueryRequest) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *QueryRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{5}
}

func (x *QueryResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type QueryKPIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	TenantId    string `protobuf:"bytes,2,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	HostIp      string `protobuf:"bytes,3,opt,name=hostIp,proto3" json:"hostIp,omitempty"`
}

func (x *QueryKPIRequest) Reset() {
	*x = QueryKPIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryKPIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKPIRequest) ProtoMessage() {}

func (x *QueryKPIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKPIRequest.ProtoReflect.Descriptor instead.
func (*QueryKPIRequest) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{6}
}

func (x *QueryKPIRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *QueryKPIRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *QueryKPIRequest) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

type QueryKPIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *QueryKPIResponse) Reset() {
	*x = QueryKPIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryKPIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryKPIResponse) ProtoMessage() {}

func (x *QueryKPIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryKPIResponse.ProtoReflect.Descriptor instead.
func (*QueryKPIResponse) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{7}
}

func (x *QueryKPIResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type QueryPackageStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	HostIp      string `protobuf:"bytes,2,opt,name=hostIp,proto3" json:"hostIp,omitempty"`
	PackageId   string `protobuf:"bytes,3,opt,name=packageId,proto3" json:"packageId,omitempty"`
	TenantId    string `protobuf:"bytes,4,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *QueryPackageStatusRequest) Reset() {
	*x = QueryPackageStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPackageStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPackageStatusRequest) ProtoMessage() {}

func (x *QueryPackageStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPackageStatusRequest.ProtoReflect.Descriptor instead.
func (*QueryPackageStatusRequest) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{8}
}

func (x *QueryPackageStatusRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *QueryPackageStatusRequest) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *QueryPackageStatusRequest) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *QueryPackageStatusRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type QueryPackageStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *QueryPackageStatusResponse) Reset() {
	*x = QueryPackageStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPackageStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPackageStatusResponse) ProtoMessage() {}

func (x *QueryPackageStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPackageStatusResponse.ProtoReflect.Descriptor instead.
func (*QueryPackageStatusResponse) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{9}
}

func (x *QueryPackageStatusResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type UploadCfgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*UploadCfgRequest_AccessToken
	//	*UploadCfgRequest_TenantId
	//	*UploadCfgRequest_HostIp
	//	*UploadCfgRequest_ConfigFile
	Data isUploadCfgRequest_Data `protobuf_oneof:"data"`
}

func (x *UploadCfgRequest) Reset() {
	*x = UploadCfgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadCfgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadCfgRequest) ProtoMessage() {}

func (x *UploadCfgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadCfgRequest.ProtoReflect.Descriptor instead.
func (*UploadCfgRequest) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{10}
}

func (m *UploadCfgRequest) GetData() isUploadCfgRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *UploadCfgRequest) GetAccessToken() string {
	if x, ok := x.GetData().(*UploadCfgRequest_AccessToken); ok {
		return x.AccessToken
	}
	return ""
}

func (x *UploadCfgRequest) GetTenantId() string {
	if x, ok := x.GetData().(*UploadCfgRequest_TenantId); ok {
		return x.TenantId
	}
	return ""
}

func (x *UploadCfgRequest) GetHostIp() string {
	if x, ok := x.GetData().(*UploadCfgRequest_HostIp); ok {
		return x.HostIp
	}
	return ""
}

func (x *UploadCfgRequest) GetConfigFile() []byte {
	if x, ok := x.GetData().(*UploadCfgRequest_ConfigFile); ok {
		return x.ConfigFile
	}
	return nil
}

type isUploadCfgRequest_Data interface {
	isUploadCfgRequest_Data()
}

type UploadCfgRequest_AccessToken struct {
	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3,oneof"`
}

type UploadCfgRequest_TenantId struct {
	TenantId string `protobuf:"bytes,2,opt,name=tenantId,proto3,oneof"`
}

type UploadCfgRequest_HostIp struct {
	HostIp string `protobuf:"bytes,3,opt,name=hostIp,proto3,oneof"`
}

type UploadCfgRequest_ConfigFile struct {
	ConfigFile []byte `protobuf:"bytes,4,opt,name=configFile,proto3,oneof"`
}

func (*UploadCfgRequest_AccessToken) isUploadCfgRequest_Data() {}

func (*UploadCfgRequest_TenantId) isUploadCfgRequest_Data() {}

func (*UploadCfgRequest_HostIp) isUploadCfgRequest_Data() {}

func (*UploadCfgRequest_ConfigFile) isUploadCfgRequest_Data() {}

type UploadCfgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UploadCfgResponse) Reset() {
	*x = UploadCfgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadCfgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadCfgResponse) ProtoMessage() {}

func (x *UploadCfgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadCfgResponse.ProtoReflect.Descriptor instead.
func (*UploadCfgResponse) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{11}
}

func (x *UploadCfgResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type RemoveCfgRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	TenantId    string `protobuf:"bytes,2,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	HostIp      string `protobuf:"bytes,3,opt,name=hostIp,proto3" json:"hostIp,omitempty"`
}

func (x *RemoveCfgRequest) Reset() {
	*x = RemoveCfgRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCfgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCfgRequest) ProtoMessage() {}

func (x *RemoveCfgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCfgRequest.ProtoReflect.Descriptor instead.
func (*RemoveCfgRequest) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveCfgRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RemoveCfgRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *RemoveCfgRequest) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

type RemoveCfgResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RemoveCfgResponse) Reset() {
	*x = RemoveCfgResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCfgResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCfgResponse) ProtoMessage() {}

func (x *RemoveCfgResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCfgResponse.ProtoReflect.Descriptor instead.
func (*RemoveCfgResponse) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{13}
}

func (x *RemoveCfgResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type WorkloadEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken   string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	AppInstanceId string `protobuf:"bytes,2,opt,name=appInstanceId,proto3" json:"appInstanceId,omitempty"`
	HostIp        string `protobuf:"bytes,3,opt,name=hostIp,proto3" json:"hostIp,omitempty"`
	TenantId      string `protobuf:"bytes,4,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *WorkloadEventsRequest) Reset() {
	*x = WorkloadEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadEventsRequest) ProtoMessage() {}

func (x *WorkloadEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadEventsRequest.ProtoReflect.Descriptor instead.
func (*WorkloadEventsRequest) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{14}
}

func (x *WorkloadEventsRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *WorkloadEventsRequest) GetAppInstanceId() string {
	if x != nil {
		return x.AppInstanceId
	}
	return ""
}

func (x *WorkloadEventsRequest) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *WorkloadEventsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type WorkloadEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *WorkloadEventsResponse) Reset() {
	*x = WorkloadEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadEventsResponse) ProtoMessage() {}

func (x *WorkloadEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadEventsResponse.ProtoReflect.Descriptor instead.
func (*WorkloadEventsResponse) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{15}
}

func (x *WorkloadEventsResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

type UploadPackageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*UploadPackageRequest_AccessToken
	//	*UploadPackageRequest_AppPackageId
	//	*UploadPackageRequest_HostIp
	//	*UploadPackageRequest_TenantId
	//	*UploadPackageRequest_Package
	Data isUploadPackageRequest_Data `protobuf_oneof:"data"`
}

func (x *UploadPackageRequest) Reset() {
	*x = UploadPackageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPackageRequest) ProtoMessage() {}

func (x *UploadPackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPackageRequest.ProtoReflect.Descriptor instead.
func (*UploadPackageRequest) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{16}
}

func (m *UploadPackageRequest) GetData() isUploadPackageRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *UploadPackageRequest) GetAccessToken() string {
	if x, ok := x.GetData().(*UploadPackageRequest_AccessToken); ok {
		return x.AccessToken
	}
	return ""
}

func (x *UploadPackageRequest) GetAppPackageId() string {
	if x, ok := x.GetData().(*UploadPackageRequest_AppPackageId); ok {
		return x.AppPackageId
	}
	return ""
}

func (x *UploadPackageRequest) GetHostIp() string {
	if x, ok := x.GetData().(*UploadPackageRequest_HostIp); ok {
		return x.HostIp
	}
	return ""
}

func (x *UploadPackageRequest) GetTenantId() string {
	if x, ok := x.GetData().(*UploadPackageRequest_TenantId); ok {
		return x.TenantId
	}
	return ""
}

func (x *UploadPackageRequest) GetPackage() []byte {
	if x, ok := x.GetData().(*UploadPackageRequest_Package); ok {
		return x.Package
	}
	return nil
}

type isUploadPackageRequest_Data interface {
	isUploadPackageRequest_Data()
}

type UploadPackageRequest_AccessToken struct {
	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3,oneof"`
}

type UploadPackageRequest_AppPackageId struct {
	AppPackageId string `protobuf:"bytes,2,opt,name=appPackageId,proto3,oneof"`
}

type UploadPackageRequest_HostIp struct {
	HostIp string `protobuf:"bytes,3,opt,name=hostIp,proto3,oneof"`
}

type UploadPackageRequest_TenantId struct {
	TenantId string `protobuf:"bytes,4,opt,name=tenantId,proto3,oneof"`
}

type UploadPackageRequest_Package struct {
	Package []byte `protobuf:"bytes,5,opt,name=package,proto3,oneof"`
}

func (*UploadPackageRequest_AccessToken) isUploadPackageRequest_Data() {}

func (*UploadPackageRequest_AppPackageId) isUploadPackageRequest_Data() {}

func (*UploadPackageRequest_HostIp) isUploadPackageRequest_Data() {}

func (*UploadPackageRequest_TenantId) isUploadPackageRequest_Data() {}

func (*UploadPackageRequest_Package) isUploadPackageRequest_Data() {}

type UploadPackageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UploadPackageResponse) Reset() {
	*x = UploadPackageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPackageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPackageResponse) ProtoMessage() {}

func (x *UploadPackageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPackageResponse.ProtoReflect.Descriptor instead.
func (*UploadPackageResponse) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{17}
}

func (x *UploadPackageResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeletePackageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	TenantId     string `protobuf:"bytes,2,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	HostIp       string `protobuf:"bytes,3,opt,name=hostIp,proto3" json:"hostIp,omitempty"`
	AppPackageId string `protobuf:"bytes,4,opt,name=appPackageId,proto3" json:"appPackageId,omitempty"`
}

func (x *DeletePackageRequest) Reset() {
	*x = DeletePackageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePackageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePackageRequest) ProtoMessage() {}

func (x *DeletePackageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePackageRequest.ProtoReflect.Descriptor instead.
func (*DeletePackageRequest) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{18}
}

func (x *DeletePackageRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *DeletePackageRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *DeletePackageRequest) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *DeletePackageRequest) GetAppPackageId() string {
	if x != nil {
		return x.AppPackageId
	}
	return ""
}

type DeletePackageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeletePackageResponse) Reset() {
	*x = DeletePackageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lcmservice_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePackageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePackageResponse) ProtoMessage() {}

func (x *DeletePackageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lcmservice_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePackageResponse.ProtoReflect.Descriptor instead.
func (*DeletePackageResponse) Descriptor() ([]byte, []int) {
	return file_lcmservice_proto_rawDescGZIP(), []int{19}
}

func (x *DeletePackageResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_lcmservice_proto protoreflect.FileDescriptor

var file_lcmservice_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xec, 0x02, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x57,
	0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6b, 0x53, 0x6b, 0x4c,
	0x63, 0x6d, 0x47, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6b, 0x53,
	0x6b, 0x4c, 0x63, 0x6d, 0x47, 0x65, 0x6e, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2d, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x10, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x22, 0x2b, 0x0a, 0x11, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f,
	0x73, 0x74, 0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x2b, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x67, 0x0a,
	0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x22, 0x2e, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b,
	0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x66, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x06, 0x68, 0x6f, 0x73,
	0x74, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x68, 0x6f, 0x73,
	0x74, 0x49, 0x70, 0x12, 0x20, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a,
	0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x66, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x68, 0x0a, 0x10, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x66, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f,
	0x73, 0x74, 0x49, 0x70, 0x22, 0x2b, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x66,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x16, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbc, 0x01,
	0x0a, 0x14, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0c, 0x61, 0x70,
	0x70, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x1c, 0x0a, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a, 0x15,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x90, 0x01,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x70, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x22, 0x2f, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x32, 0xf7, 0x07, 0x0a, 0x06, 0x41, 0x70, 0x70, 0x4c, 0x43, 0x4d, 0x12, 0x62, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x09, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x59, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x50, 0x49, 0x12, 0x24, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4b, 0x50,
	0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x12, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2e, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x43, 0x66, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x66, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x5f, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x66, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x66, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x0d, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x12, 0x68, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x6c, 0x63, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_lcmservice_proto_rawDescOnce sync.Once
	file_lcmservice_proto_rawDescData = file_lcmservice_proto_rawDesc
)

func file_lcmservice_proto_rawDescGZIP() []byte {
	file_lcmservice_proto_rawDescOnce.Do(func() {
		file_lcmservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_lcmservice_proto_rawDescData)
	})
	return file_lcmservice_proto_rawDescData
}

var file_lcmservice_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_lcmservice_proto_goTypes = []interface{}{
	(*InstantiateRequest)(nil),         // 0: internal.lcmservice.InstantiateRequest
	(*InstantiateResponse)(nil),        // 1: internal.lcmservice.InstantiateResponse
	(*TerminateRequest)(nil),           // 2: internal.lcmservice.TerminateRequest
	(*TerminateResponse)(nil),          // 3: internal.lcmservice.TerminateResponse
	(*QueryRequest)(nil),               // 4: internal.lcmservice.QueryRequest
	(*QueryResponse)(nil),              // 5: internal.lcmservice.QueryResponse
	(*QueryKPIRequest)(nil),            // 6: internal.lcmservice.QueryKPIRequest
	(*QueryKPIResponse)(nil),           // 7: internal.lcmservice.QueryKPIResponse
	(*QueryPackageStatusRequest)(nil),  // 8: internal.lcmservice.QueryPackageStatusRequest
	(*QueryPackageStatusResponse)(nil), // 9: internal.lcmservice.QueryPackageStatusResponse
	(*UploadCfgRequest)(nil),           // 10: internal.lcmservice.UploadCfgRequest
	(*UploadCfgResponse)(nil),          // 11: internal.lcmservice.UploadCfgResponse
	(*RemoveCfgRequest)(nil),           // 12: internal.lcmservice.RemoveCfgRequest
	(*RemoveCfgResponse)(nil),          // 13: internal.lcmservice.RemoveCfgResponse
	(*WorkloadEventsRequest)(nil),      // 14: internal.lcmservice.WorkloadEventsRequest
	(*WorkloadEventsResponse)(nil),     // 15: internal.lcmservice.WorkloadEventsResponse
	(*UploadPackageRequest)(nil),       // 16: internal.lcmservice.UploadPackageRequest
	(*UploadPackageResponse)(nil),      // 17: internal.lcmservice.UploadPackageResponse
	(*DeletePackageRequest)(nil),       // 18: internal.lcmservice.DeletePackageRequest
	(*DeletePackageResponse)(nil),      // 19: internal.lcmservice.DeletePackageResponse
	nil,                                // 20: internal.lcmservice.InstantiateRequest.ParametersEntry
}
var file_lcmservice_proto_depIdxs = []int32{
	20, // 0: internal.lcmservice.InstantiateRequest.parameters:type_name -> internal.lcmservice.InstantiateRequest.ParametersEntry
	0,  // 1: internal.lcmservice.AppLCM.instantiate:input_type -> internal.lcmservice.InstantiateRequest
	2,  // 2: internal.lcmservice.AppLCM.terminate:input_type -> internal.lcmservice.TerminateRequest
	4,  // 3: internal.lcmservice.AppLCM.query:input_type -> internal.lcmservice.QueryRequest
	6,  // 4: internal.lcmservice.AppLCM.queryKPI:input_type -> internal.lcmservice.QueryKPIRequest
	8,  // 5: internal.lcmservice.AppLCM.queryPackageStatus:input_type -> internal.lcmservice.QueryPackageStatusRequest
	10, // 6: internal.lcmservice.AppLCM.uploadConfig:input_type -> internal.lcmservice.UploadCfgRequest
	12, // 7: internal.lcmservice.AppLCM.removeConfig:input_type -> internal.lcmservice.RemoveCfgRequest
	14, // 8: internal.lcmservice.AppLCM.workloadEvents:input_type -> internal.lcmservice.WorkloadEventsRequest
	16, // 9: internal.lcmservice.AppLCM.uploadPackage:input_type -> internal.lcmservice.UploadPackageRequest
	18, // 10: internal.lcmservice.AppLCM.deletePackage:input_type -> internal.lcmservice.DeletePackageRequest
	1,  // 11: internal.lcmservice.AppLCM.instantiate:output_type -> internal.lcmservice.InstantiateResponse
	3,  // 12: internal.lcmservice.AppLCM.terminate:output_type -> internal.lcmservice.TerminateResponse
	5,  // 13: internal.lcmservice.AppLCM.query:output_type -> internal.lcmservice.QueryResponse
	7,  // 14: internal.lcmservice.AppLCM.queryKPI:output_type -> internal.lcmservice.QueryKPIResponse
	9,  // 15: internal.lcmservice.AppLCM.queryPackageStatus:output_type -> internal.lcmservice.QueryPackageStatusResponse
	11, // 16: internal.lcmservice.AppLCM.uploadConfig:output_type -> internal.lcmservice.UploadCfgResponse
	13, // 17: internal.lcmservice.AppLCM.removeConfig:output_type -> internal.lcmservice.RemoveCfgResponse
	15, // 18: internal.lcmservice.AppLCM.workloadEvents:output_type -> internal.lcmservice.WorkloadEventsResponse
	17, // 19: internal.lcmservice.AppLCM.uploadPackage:output_type -> internal.lcmservice.UploadPackageResponse
	19, // 20: internal.lcmservice.AppLCM.deletePackage:output_type -> internal.lcmservice.DeletePackageResponse
	11, // [11:21] is the sub-list for method output_type
	1,  // [1:11] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_lcmservice_proto_init() }
func file_lcmservice_proto_init() {
	if File_lcmservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lcmservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstantiateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstantiateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryKPIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryKPIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPackageStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPackageStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadCfgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadCfgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCfgRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCfgResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkloadEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkloadEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPackageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPackageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePackageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lcmservice_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePackageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_lcmservice_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*UploadCfgRequest_AccessToken)(nil),
		(*UploadCfgRequest_TenantId)(nil),
		(*UploadCfgRequest_HostIp)(nil),
		(*UploadCfgRequest_ConfigFile)(nil),
	}
	file_lcmservice_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*UploadPackageRequest_AccessToken)(nil),
		(*UploadPackageRequest_AppPackageId)(nil),
		(*UploadPackageRequest_HostIp)(nil),
		(*UploadPackageRequest_TenantId)(nil),
		(*UploadPackageRequest_Package)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lcmservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lcmservice_proto_goTypes,
		DependencyIndexes: file_lcmservice_proto_depIdxs,
		MessageInfos:      file_lcmservice_proto_msgTypes,
	}.Build()
	File_lcmservice_proto = out.File
	file_lcmservice_proto_rawDesc = nil
	file_lcmservice_proto_goTypes = nil
	file_lcmservice_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AppLCMClient is the client API for AppLCM service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppLCMClient interface {
	Instantiate(ctx context.Context, in *InstantiateRequest, opts ...grpc.CallOption) (*InstantiateResponse, error)
	Terminate(ctx context.Context, in *TerminateRequest, opts ...grpc.CallOption) (*TerminateResponse, error)
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
	QueryKPI(ctx context.Context, in *QueryKPIRequest, opts ...grpc.CallOption) (*QueryKPIResponse, error)
	QueryPackageStatus(ctx context.Context, in *QueryPackageStatusRequest, opts ...grpc.CallOption) (*QueryPackageStatusResponse, error)
	UploadConfig(ctx context.Context, opts ...grpc.CallOption) (AppLCM_UploadConfigClient, error)
	RemoveConfig(ctx context.Context, in *RemoveCfgRequest, opts ...grpc.CallOption) (*RemoveCfgResponse, error)
	WorkloadEvents(ctx context.Context, in *WorkloadEventsRequest, opts ...grpc.CallOption) (*WorkloadEventsResponse, error)
	UploadPackage(ctx context.Context, opts ...grpc.CallOption) (AppLCM_UploadPackageClient, error)
	DeletePackage(ctx context.Context, in *DeletePackageRequest, opts ...grpc.CallOption) (*DeletePackageResponse, error)
}

type appLCMClient struct {
	cc grpc.ClientConnInterface
}

func NewAppLCMClient(cc grpc.ClientConnInterface) AppLCMClient {
	return &appLCMClient{cc}
}

func (c *appLCMClient) Instantiate(ctx context.Context, in *InstantiateRequest, opts ...grpc.CallOption) (*InstantiateResponse, error) {
	out := new(InstantiateResponse)
	err := c.cc.Invoke(ctx, "/internal.lcmservice.AppLCM/instantiate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appLCMClient) Terminate(ctx context.Context, in *TerminateRequest, opts ...grpc.CallOption) (*TerminateResponse, error) {
	out := new(TerminateResponse)
	err := c.cc.Invoke(ctx, "/internal.lcmservice.AppLCM/terminate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appLCMClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := c.cc.Invoke(ctx, "/internal.lcmservice.AppLCM/query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appLCMClient) QueryKPI(ctx context.Context, in *QueryKPIRequest, opts ...grpc.CallOption) (*QueryKPIResponse, error) {
	out := new(QueryKPIResponse)
	err := c.cc.Invoke(ctx, "/internal.lcmservice.AppLCM/queryKPI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appLCMClient) QueryPackageStatus(ctx context.Context, in *QueryPackageStatusRequest, opts ...grpc.CallOption) (*QueryPackageStatusResponse, error) {
	out := new(QueryPackageStatusResponse)
	err := c.cc.Invoke(ctx, "/internal.lcmservice.AppLCM/queryPackageStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appLCMClient) UploadConfig(ctx context.Context, opts ...grpc.CallOption) (AppLCM_UploadConfigClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AppLCM_serviceDesc.Streams[0], "/internal.lcmservice.AppLCM/uploadConfig", opts...)
	if err != nil {
		return nil, err
	}
	x := &appLCMUploadConfigClient{stream}
	return x, nil
}

type AppLCM_UploadConfigClient interface {
	Send(*UploadCfgRequest) error
	CloseAndRecv() (*UploadCfgResponse, error)
	grpc.ClientStream
}

type appLCMUploadConfigClient struct {
	grpc.ClientStream
}

func (x *appLCMUploadConfigClient) Send(m *UploadCfgRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *appLCMUploadConfigClient) CloseAndRecv() (*UploadCfgResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadCfgResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *appLCMClient) RemoveConfig(ctx context.Context, in *RemoveCfgRequest, opts ...grpc.CallOption) (*RemoveCfgResponse, error) {
	out := new(RemoveCfgResponse)
	err := c.cc.Invoke(ctx, "/internal.lcmservice.AppLCM/removeConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appLCMClient) WorkloadEvents(ctx context.Context, in *WorkloadEventsRequest, opts ...grpc.CallOption) (*WorkloadEventsResponse, error) {
	out := new(WorkloadEventsResponse)
	err := c.cc.Invoke(ctx, "/internal.lcmservice.AppLCM/workloadEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appLCMClient) UploadPackage(ctx context.Context, opts ...grpc.CallOption) (AppLCM_UploadPackageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AppLCM_serviceDesc.Streams[1], "/internal.lcmservice.AppLCM/uploadPackage", opts...)
	if err != nil {
		return nil, err
	}
	x := &appLCMUploadPackageClient{stream}
	return x, nil
}

type AppLCM_UploadPackageClient interface {
	Send(*UploadPackageRequest) error
	CloseAndRecv() (*UploadPackageResponse, error)
	grpc.ClientStream
}

type appLCMUploadPackageClient struct {
	grpc.ClientStream
}

func (x *appLCMUploadPackageClient) Send(m *UploadPackageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *appLCMUploadPackageClient) CloseAndRecv() (*UploadPackageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadPackageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *appLCMClient) DeletePackage(ctx context.Context, in *DeletePackageRequest, opts ...grpc.CallOption) (*DeletePackageResponse, error) {
	out := new(DeletePackageResponse)
	err := c.cc.Invoke(ctx, "/internal.lcmservice.AppLCM/deletePackage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppLCMServer is the server API for AppLCM service.
type AppLCMServer interface {
	Instantiate(context.Context, *InstantiateRequest) (*InstantiateResponse, error)
	Terminate(context.Context, *TerminateRequest) (*TerminateResponse, error)
	Query(context.Context, *QueryRequest) (*QueryResponse, error)
	QueryKPI(context.Context, *QueryKPIRequest) (*QueryKPIResponse, error)
	QueryPackageStatus(context.Context, *QueryPackageStatusRequest) (*QueryPackageStatusResponse, error)
	UploadConfig(AppLCM_UploadConfigServer) error
	RemoveConfig(context.Context, *RemoveCfgRequest) (*RemoveCfgResponse, error)
	WorkloadEvents(context.Context, *WorkloadEventsRequest) (*WorkloadEventsResponse, error)
	UploadPackage(AppLCM_UploadPackageServer) error
	DeletePackage(context.Context, *DeletePackageRequest) (*DeletePackageResponse, error)
}

// UnimplementedAppLCMServer can be embedded to have forward compatible implementations.
type UnimplementedAppLCMServer struct {
}

func (*UnimplementedAppLCMServer) Instantiate(context.Context, *InstantiateRequest) (*InstantiateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Instantiate not implemented")
}
func (*UnimplementedAppLCMServer) Terminate(context.Context, *TerminateRequest) (*TerminateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Terminate not implemented")
}
func (*UnimplementedAppLCMServer) Query(context.Context, *QueryRequest) (*QueryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}
func (*UnimplementedAppLCMServer) QueryKPI(context.Context, *QueryKPIRequest) (*QueryKPIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryKPI not implemented")
}
func (*UnimplementedAppLCMServer) QueryPackageStatus(context.Context, *QueryPackageStatusRequest) (*QueryPackageStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryPackageStatus not implemented")
}
func (*UnimplementedAppLCMServer) UploadConfig(AppLCM_UploadConfigServer) error {
	return status.Errorf(codes.Unimplemented, "method UploadConfig not implemented")
}
func (*UnimplementedAppLCMServer) RemoveConfig(context.Context, *RemoveCfgRequest) (*RemoveCfgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveConfig not implemented")
}
func (*UnimplementedAppLCMServer) WorkloadEvents(context.Context, *WorkloadEventsRequest) (*WorkloadEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WorkloadEvents not implemented")
}
func (*UnimplementedAppLCMServer) UploadPackage(AppLCM_UploadPackageServer) error {
	return status.Errorf(codes.Unimplemented, "method UploadPackage not implemented")
}
func (*UnimplementedAppLCMServer) DeletePackage(context.Context, *DeletePackageRequest) (*DeletePackageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePackage not implemented")
}

func RegisterAppLCMServer(s *grpc.Server, srv AppLCMServer) {
	s.RegisterService(&_AppLCM_serviceDesc, srv)
}

func _AppLCM_Instantiate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InstantiateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppLCMServer).Instantiate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.lcmservice.AppLCM/Instantiate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppLCMServer).Instantiate(ctx, req.(*InstantiateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppLCM_Terminate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TerminateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppLCMServer).Terminate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.lcmservice.AppLCM/Terminate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppLCMServer).Terminate(ctx, req.(*TerminateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppLCM_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppLCMServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.lcmservice.AppLCM/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppLCMServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppLCM_QueryKPI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryKPIRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppLCMServer).QueryKPI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.lcmservice.AppLCM/QueryKPI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppLCMServer).QueryKPI(ctx, req.(*QueryKPIRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppLCM_QueryPackageStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPackageStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppLCMServer).QueryPackageStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.lcmservice.AppLCM/QueryPackageStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppLCMServer).QueryPackageStatus(ctx, req.(*QueryPackageStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppLCM_UploadConfig_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AppLCMServer).UploadConfig(&appLCMUploadConfigServer{stream})
}

type AppLCM_UploadConfigServer interface {
	SendAndClose(*UploadCfgResponse) error
	Recv() (*UploadCfgRequest, error)
	grpc.ServerStream
}

type appLCMUploadConfigServer struct {
	grpc.ServerStream
}

func (x *appLCMUploadConfigServer) SendAndClose(m *UploadCfgResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *appLCMUploadConfigServer) Recv() (*UploadCfgRequest, error) {
	m := new(UploadCfgRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _AppLCM_RemoveConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveCfgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppLCMServer).RemoveConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.lcmservice.AppLCM/RemoveConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppLCMServer).RemoveConfig(ctx, req.(*RemoveCfgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppLCM_WorkloadEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkloadEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppLCMServer).WorkloadEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.lcmservice.AppLCM/WorkloadEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppLCMServer).WorkloadEvents(ctx, req.(*WorkloadEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AppLCM_UploadPackage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AppLCMServer).UploadPackage(&appLCMUploadPackageServer{stream})
}

type AppLCM_UploadPackageServer interface {
	SendAndClose(*UploadPackageResponse) error
	Recv() (*UploadPackageRequest, error)
	grpc.ServerStream
}

type appLCMUploadPackageServer struct {
	grpc.ServerStream
}

func (x *appLCMUploadPackageServer) SendAndClose(m *UploadPackageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *appLCMUploadPackageServer) Recv() (*UploadPackageRequest, error) {
	m := new(UploadPackageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _AppLCM_DeletePackage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePackageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppLCMServer).DeletePackage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/internal.lcmservice.AppLCM/DeletePackage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppLCMServer).DeletePackage(ctx, req.(*DeletePackageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AppLCM_serviceDesc = grpc.ServiceDesc{
	ServiceName: "internal.lcmservice.AppLCM",
	HandlerType: (*AppLCMServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "instantiate",
			Handler:    _AppLCM_Instantiate_Handler,
		},
		{
			MethodName: "terminate",
			Handler:    _AppLCM_Terminate_Handler,
		},
		{
			MethodName: "query",
			Handler:    _AppLCM_Query_Handler,
		},
		{
			MethodName: "queryKPI",
			Handler:    _AppLCM_QueryKPI_Handler,
		},
		{
			MethodName: "queryPackageStatus",
			Handler:    _AppLCM_QueryPackageStatus_Handler,
		},
		{
			MethodName: "removeConfig",
			Handler:    _AppLCM_RemoveConfig_Handler,
		},
		{
			MethodName: "workloadEvents",
			Handler:    _AppLCM_WorkloadEvents_Handler,
		},
		{
			MethodName: "deletePackage",
			Handler:    _AppLCM_DeletePackage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "uploadConfig",
			Handler:       _AppLCM_UploadConfig_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "uploadPackage",
			Handler:       _AppLCM_UploadPackage_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "lcmservice.proto",
}
